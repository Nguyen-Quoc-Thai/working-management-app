{"version":3,"sources":["components/FormAdd.js","actions/index.js","constants/ActionTypes.js","components/BtnAddForm.js","components/SearchBar.js","components/BtnSort.js","components/DataItem.js","components/DataTable.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/DisplayForm.js","reducers/TaskEditing.js","reducers/FilterTable.js","reducers/Search.js","reducers/SortTable.js","reducers/index.js","index.js"],"names":["FormAdd","props","onClickAddFormTitle","onPanelClose","onChange","event","target","name","value","setState","onSubmit","preventDefault","onSaveTask","state","onClear","id","status","nextProps","TaskEditing","this","DisplayForm","className","onClick","required","type","Component","connect","dispatch","task","actions","BtnAddForm","onClickAddFormBtn","resetFormAdd","onClickBtnAdd","SearchBar","onSearchKeyWord","onSearchBar","searchKeyWord","placeholder","regex","BtnSort","onSortTable","sortName","sortValue","SortTable","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","by","sort","DataItem","onChangeStatus","onToggleStatus","onDeleteItem","onDeleteTask","onUpdateItem","onEditingTask","index","DataTable","onFilterTable","FilterTable","filterName","filterStatus","tasks","Search","JSON","parse","localStorage","getItem","filter","toLowerCase","indexOf","task1","task2","parseInt","elementTasks","map","key","App","Boolean","window","location","hostname","match","rdS","Math","floor","random","toString","substring","generateID","findIndexOfID","initialState","i","length","data","myReducer","action","newTask","push","setItem","stringify","splice","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.87e22eae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n \r\nclass FormAdd extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id: '',\r\n            name: '',\r\n            status: false\r\n        }\r\n    }\r\n\r\n    onClickAddFormTitle = () =>{\r\n        this.props.onPanelClose();\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSaveTask(this.state);\r\n        this.props.onPanelClose();\r\n    }\r\n\r\n    onClear = () => {\r\n        this.props.onPanelClose();\r\n    }\r\n\r\n    // componentWillMount(){\r\n    //     var taskEditing = this.props.taskEditing;\r\n\r\n    //     if(taskEditing){\r\n    //         this.setState({\r\n    //             id: taskEditing.id,\r\n    //             name: taskEditing.name,\r\n    //             status: taskEditing.status\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps){   \r\n        if(nextProps && nextProps.TaskEditing){\r\n            this.setState({\r\n                id: nextProps.TaskEditing.id,\r\n                name: nextProps.TaskEditing.name,\r\n                status: nextProps.TaskEditing.status\r\n            });\r\n        }else if(nextProps && !nextProps.TaskEditing){\r\n            this.setState({\r\n                id: '',\r\n                name: '',\r\n                status: false\r\n            });  \r\n        }\r\n    }\r\n\r\n\trender() {\r\n\r\n        var { TaskEditing, DisplayForm } = this.props;\r\n\r\n        if(!DisplayForm) return '';\r\n\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"panel panel-warning\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\" onClick={ this.onClickAddFormTitle }> {TaskEditing.id===''?'Add Working':'Update Working'}\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    <span className=\"label label-info ft-size\">Name</span>\r\n                                </label>\r\n                                <input \r\n                                    required\r\n                                    type=\"text\" \r\n                                    className=\"form-control mt-5px\"\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <br/>\r\n                                <label>\r\n                                    <span className=\"label label-info ft-size\">Status</span>\r\n                                </label>\r\n                                <select \r\n                                    className=\"form-control mt-5px\"\r\n                                    name=\"status\"\r\n                                    value={this.state.status}\r\n                                    onChange={this.onChange}\r\n                                >\r\n                                    <option value={true}>Active</option>\r\n                                    <option value={false}>DeActive</option>\r\n                                </select>\r\n                                <br/>\r\n                            </div>\r\n                        \r\n                            <button type=\"submit\" className=\"btn btn-success mr-2 up-si\">Save</button>\r\n                            <button type=\"button\" className=\"btn btn-warning up-si\" onClick={this.onClear}>Cancel</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        DisplayForm: state.DisplayForm,\r\n        TaskEditing: state.TaskEditing\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSaveTask: (task) => {\r\n            dispatch(actions.saveTask(task))\r\n        },\r\n\r\n        onPanelClose: () => {\r\n            dispatch(actions.panelClose());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormAdd);","import * as types  from './../constants/ActionTypes';\r\n\r\n\r\n// actions \r\n\r\n// Liệt kê tất cả các Task\r\nexport const listAll = () => {\r\n\treturn {\r\n\t\ttype: types.LIST_ALL\r\n\t}\r\n};\r\n\r\n// Add hoặc Update 1 Task\r\nexport const saveTask = (task) => {\r\n\treturn {\r\n\t\ttype: types.SAVE_TASK,\r\n\t\ttask\r\n\t}\r\n};\r\n\r\n// Button Add New Task\r\nexport const btnAdd = () => {\r\n\treturn {\r\n\t\ttype: types.BTN_ADD\r\n\t}\r\n};\r\n\r\n// Click on Panel Form Add or Update Working\r\nexport const panelClose = () => {\r\n\treturn {\r\n\t\ttype: types.PANEL_CLOSE\r\n\t}\r\n}\r\n\r\n// Quick Change status on Table by Click\r\nexport const toggleStatus = (id) => {\r\n\treturn {\r\n\t\ttype: types.TOGGLE_STATUS,\r\n\t\tid\r\n\t}\r\n}\r\n\r\n// BTN Dell task\r\nexport const delTask = (id) => {\r\n\treturn {\r\n\t\ttype: types.DEL_TASK,\r\n\t\tid\r\n\t}\r\n}\r\n\r\n// BTN Update task\r\nexport const editTask = (task) => {\r\n\treturn {\r\n\t\ttype: types.EDIT_TASK,\r\n\t\ttask\r\n\t}\r\n}\r\n\r\n// Reset Form Add Working \r\nexport const resetFormAdd = () => {\r\n\treturn {\r\n\t\ttype: types.RESET_FORM\r\n\t}\r\n}\r\n\r\n// Filter Table (Filter name task and Status)\r\nexport const filterTable = (filterName, filterStatus) => {\r\n\treturn {\r\n\t\ttype: types.FILTER_TABLE,\r\n\t\tfilter: {\r\n\t\t\tfilterName,\r\n\t\t\tfilterStatus\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Search Bar\r\nexport const searchBar = (regex) => {\r\n\treturn {\r\n\t\ttype: types.SEARCH_BAR,\r\n\t\tregex\r\n\t}\r\n}\r\n\r\n// Sort Table\r\nexport const sortTable = (by, value) => {\r\n\treturn {\r\n\t\ttype: types.SORT_TABLE,\r\n\t\tsort: {\r\n\t\t\tby,\r\n\t\t\tvalue\r\n\t\t}\r\n\t}\r\n}","export const LIST_ALL = 'LIST_ALL';\r\n\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\n\r\nexport const BTN_ADD = 'BTN_ADD';\r\n\r\nexport const PANEL_CLOSE = 'PANEL_CLOSE';\r\n\r\nexport const BTN_UPDATE = 'BTN_UPDATE';\r\n\r\nexport const TOGGLE_STATUS = 'TOGGLE_STATUS';\r\n\r\nexport const DEL_TASK = 'DEL_TASK';\r\n\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\n\r\nexport const RESET_FORM = 'RESET_FORM';\r\n\r\nexport const FILTER_TABLE = 'FILTER_TABLE';\r\n\r\nexport const SEARCH_BAR = 'SEARCH_BAR';\r\n\r\nexport const SORT_TABLE = 'SORT_TABLE';","import React, { Component } from 'react';\r\n\r\nimport * as actions from './../actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass BtnAddForm extends Component {\r\n\r\n\tonClickAddFormBtn = () =>{\r\n\t\tthis.props.resetFormAdd();\r\n\t\tthis.props.onClickBtnAdd();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <button type=\"button\" className=\"btn btn-primary btn-add\" onClick={this.onClickAddFormBtn}>ADD Working</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n\treturn {\r\n\t\tonClickBtnAdd: () => {\r\n\t\t\tdispatch(actions.btnAdd());\r\n\t\t},\r\n\t\tresetFormAdd: () => {\r\n\t\t\tdispatch(actions.resetFormAdd());\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BtnAddForm);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass SearchBar extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchKeyWord: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (event) =>{\r\n\t\tvar target = event.target;\r\n\t\tvar name = target.name;\r\n\t\tvar value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]:value\r\n\t\t});\r\n\t}\r\n\r\n\tonSearchKeyWord = () => {\r\n\t\t\r\n\t\tthis.props.onSearchBar(this.state);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8 pd-r-0\">\r\n                    <br/>\r\n                    <input \r\n                    \ttype=\"text\" \r\n                    \tclassName=\"form-control he-30\" \r\n                    \tplaceholder = \"Enter key word...\" \r\n                    \trequired=\"required\"\r\n                    \tname=\"searchKeyWord\"\r\n                    \tvalue={ this.state.searchKeyWord }\r\n                    \tonChange={ this.onChange }\r\n                    />\r\n                </div>\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4 pd-l-0\">\r\n                    <br/>\r\n                    <button \r\n                    \ttype=\"button\" \r\n                    \tclassName=\"btn btn-primary he-30\"\r\n                    \tonClick={ this.onSearchKeyWord }\r\n                    >Find</button>\r\n                </div>    \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n\treturn {\r\n\t\tonSearchBar: (regex) => {\r\n\t\t\tdispatch(actions.searchBar(regex));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchBar);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass BtnSort extends Component {\r\n\r\n    onSortTable = (sortName, sortValue) => { \r\n\r\n        this.props.onSortTable(sortName, sortValue);\r\n    }\r\n\r\n\trender() {\r\n\r\n        var { SortTable } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br/>\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-secondary dropdown-toggle he-30\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Sort\r\n                    </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <a \r\n                            className={(SortTable.by===\"name\" && SortTable.value === 1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('name', 1)}}\r\n\r\n                        >Name A-Z</a>\r\n                        <a \r\n                            className={(SortTable.by===\"name\" && SortTable.value === -1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('name', -1)}}\r\n\r\n                        >Name Z-A</a>\r\n                        \r\n                        <hr/>\r\n                        <a \r\n                            className={(SortTable.by===\"status\" && SortTable.value === 1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('status', 1)}}\r\n\r\n                        >Status Active</a>\r\n                        <a \r\n                            className={(SortTable.by===\"status\" && SortTable.value === -1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('status', -1)}}\r\n\r\n                        >Status DeActive</a>\r\n                    </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        SortTable: state.SortTable\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSortTable: (by, value) => {\r\n            dispatch(actions.sortTable(by, value));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BtnSort);","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass DataItem extends Component {\r\n\r\n    onChangeStatus = () => {\r\n        this.props.onToggleStatus(this.props.task.id);\r\n    }\r\n\r\n    onDeleteItem = () => {\r\n        this.props.onDeleteTask(this.props.task.id);\r\n        this.props.onPanelClose();\r\n    }\r\n\r\n    onUpdateItem = () => {\r\n        this.props.onClickBtnAdd();\r\n        this.props.onEditingTask(this.props.task);\r\n    }\r\n\r\n\trender() {\r\n\r\n        var { task, index } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<tr>\r\n                <td className=\"al-ct\">{ index + 1 }</td>\r\n                <td className=\"ov-hd\">\r\n                    { task.name }\r\n                </td>\r\n                <td className=\"al-ct\">\r\n                    <span className={task.status===true?\"label label-success cs-pt\":\"label label-danger cs-pt\"} onClick={ this.onChangeStatus }>{ task.status===true?'Active':'DeActive' }</span>\r\n                </td>\r\n                <td className=\"al-ct\">\r\n                    <button \r\n                        className=\"align-item\" \r\n                        type=\"submit\" \r\n                        className=\"btn btn-warning mr-2\"\r\n                        onClick={ this.onUpdateItem }\r\n                    >\r\n                    Update</button>\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-danger\"\r\n                        onClick={ this.onDeleteItem }\r\n                    >Delete</button>\r\n                </td>\r\n            </tr>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onToggleStatus: (id) => {\r\n            dispatch(actions.toggleStatus(id));\r\n        },\r\n        onDeleteTask: (id) => {\r\n            dispatch(actions.delTask(id));\r\n        },\r\n        onPanelClose: () => {\r\n            dispatch(actions.panelClose());\r\n        },\r\n        onClickBtnAdd: () => {\r\n            dispatch(actions.btnAdd());\r\n        },\r\n        onEditingTask: (task) => {\r\n            dispatch(actions.editTask(task));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DataItem);\r\n","import React, { Component } from 'react';\r\nimport DataItem from './DataItem';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass DataTable extends Component {\r\n\r\n\tonChange = (event) => {\r\n\t\tvar target = event.target;\r\n\t\tvar name = target.name;\r\n\t\tvar value = target.value;\r\n\r\n\t\tthis.props.onFilterTable(\r\n\t\t\tname === 'filterName' ? value : this.props.FilterTable.filterName,\r\n\t\t\tname === 'filterStatus' ? value : this.props.FilterTable.filterStatus\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tvar { tasks, FilterTable, Search, SortTable } = this.props;\r\n\r\n\t\t// Get DB from Local\r\n        tasks = JSON.parse(localStorage.getItem('tasks'));\r\n\r\n        // Filter Table before Render (If oke) (Filter Name and Filter Status) \r\n\t\tif(FilterTable){\r\n\r\n            if(FilterTable.filterName){\r\n                tasks = tasks.filter((task) => {\r\n                    return task.name.toLowerCase().indexOf(FilterTable.filterName.toLowerCase()) !== -1;\r\n                })\r\n            }\r\n\r\n            tasks = tasks.filter((task) => {\r\n\r\n                if(FilterTable.filterStatus !== -1){ \r\n                    return (task.status === true ? 0 : 1) === FilterTable.filterStatus;   \r\n                }\r\n\r\n                return task;\r\n            })\r\n        }\r\n\r\n        // Search table before Render  (If oke)\r\n\t\tif(Search){\r\n\r\n            tasks = tasks.filter((task) => {\r\n                return task.name.toLowerCase().indexOf(Search.toLowerCase()) !== -1;\r\n            })\r\n    \t}\r\n\r\n\r\n    \t// Sort table before Render  (If oke)\r\n\t\tif(SortTable.by === 'name'){\r\n\r\n            tasks.sort((task1, task2) => {\r\n                if(task1.name > task2.name) {\r\n                    return parseInt(SortTable.value);  \r\n                }else if(task1.name < task2.name) {\r\n                    return -parseInt(SortTable.value);  \r\n                }else return 0;\r\n            });\r\n        }else{\r\n\r\n            tasks.sort((task1, task2) => {\r\n                if(task1.status > task2.status) {\r\n                    return -parseInt(SortTable.value);  \r\n                }else if(task1.status < task2.status) {\r\n                    return parseInt(SortTable.value);  \r\n                }else return 0;\r\n            });\r\n        }\r\n\r\n\r\n        // Render task item\r\n\t\tvar elementTasks = tasks.map((task, index) => {\r\n\t\t\treturn <DataItem \r\n\t\t\t\t\t\tkey={ task.id } \r\n\t\t\t\t\t\tindex={ index } \r\n\t\t\t\t\t\ttask={ task }\r\n\t\t\t\t\t/>\r\n\t\t});\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br/>\r\n\t            <br/>\r\n\t            <table className=\"table table-hover\">\r\n\t                <thead className=\"align-header-table\">\r\n\t                    <tr>\r\n\t                        <th>STT</th>\r\n\t                        <th>Name</th>\r\n\t                        <th>Status</th>\r\n\t                        <th>Task</th>\r\n\t                    </tr>\r\n\t                </thead>\r\n\t                <tbody>\r\n\t                    <tr className=\"he-header\">\r\n\t                        <td></td>\r\n\t                        <td>\r\n\t                            <input \r\n\t                            \ttype=\"text\"\r\n\t                            \tclassName=\"form-control he-30\" \r\n\t                            \tplaceholder=\"Filter name\"\r\n\t                            \tname=\"filterName\"\r\n\t                            \tvalue={SortTable.filterName}\r\n\t                            \tonChange={this.onChange}\r\n\t                             />\r\n\t                        </td>\r\n\t                        <td>\r\n\t                            <select\r\n\t                            \tid=\"input\" \r\n\t                            \tclassName=\"form-control\"\r\n\t                            \tname=\"filterStatus\"\r\n\t                            \tvalue={SortTable.filterStatus}\r\n\t                            \tonChange={this.onChange}\r\n\t                            >\r\n\t                                <option value={-1}>All</option>\r\n\t                                <option value={0}>Active</option>\r\n\t                                <option value={1}>DeActive</option>\r\n\t                            </select>\r\n\t                        </td>\r\n\t                        <td>\r\n\t                        </td>\r\n\t                    </tr>\r\n\t                    { elementTasks }\r\n\t                </tbody>\r\n\t            </table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttasks: state.tasks,\r\n\t\tFilterTable: state.FilterTable,\r\n\t\tSearch: state.Search,\r\n\t\tSortTable: state.SortTable,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n\treturn {\r\n\t\tonFilterTable: (filterName, filterStatus) => {\r\n\t\t\tdispatch(actions.filterTable(filterName, filterStatus));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DataTable);","import React, { Component } from 'react';\nimport './App.css';\n\nimport FormAdd from './components/FormAdd';\nimport BtnAddForm from './components/BtnAddForm';\nimport SearchBar from './components/SearchBar';\nimport BtnSort from './components/BtnSort';\nimport DataTable from './components/DataTable';\n\nimport * as actions from './actions/index';\nimport { connect } from 'react-redux';\n\n\nclass App extends Component {\n    \n    constructor(props){\n            super(props);\n    }\n\n    render() {\n\n        var { DisplayForm } = this.props;\n\n        return (    \n            <div>\n                <div className=\"container\">\n                    <h1 className=\"header-style\">Working Management</h1>\n                    <div className=\"row\">\n                        <div className={DisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\":\"\"}>\n                            <FormAdd />\n                        </div>\n                        <div className={DisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                            <div className=\"row\">\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                    <BtnAddForm />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                                    <SearchBar />\n                                </div>\n                                \n                                <div className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2\">\n                                    <BtnSort />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                    <DataTable />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        DisplayForm: state.DisplayForm\n    }\n}\n\nexport default connect(mapStateToProps,null)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from './../constants/ActionTypes';\r\n\r\n// Function render random charactor\r\nvar rdS = () => {\r\n    return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\r\n}\r\n\r\n// render random ID\r\nvar generateID = () => {\r\n    return rdS() + '-' + rdS() + rdS() + \"-\" + rdS() + \"-\" + rdS() + rdS() + rdS();\r\n}\r\n\r\n// Find index of Element by ID\r\nvar findIndexOfID = (id) => {\r\n    var tasks = initialState;\r\n    for (let i=0; i<tasks.length; i++) {\r\n        if(tasks[i].id===id){\r\n            return i;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\n\r\n// DATA\r\nvar data = JSON.parse(localStorage.getItem('tasks'));\r\n\r\nvar initialState = data ? data : [];\r\n\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n\r\n\tswitch(action.type){\r\n\r\n\t\tcase types.LIST_ALL: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tcase types.SAVE_TASK: {\r\n\r\n\t\t\tif(action.task.id === ''){\r\n\t\t\t\tvar newTask = {\r\n\t\t\t\t\tid: generateID(),\r\n\t\t\t\t\tname: action.task.name,\r\n\t\t\t\t\tstatus: action.task.status === 'true' ? true : false\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.push(newTask);\r\n\r\n\t\t\t}else{\r\n\t\t\t\tvar index = findIndexOfID(action.task.id);\r\n\r\n\t\t\t\tstate[index] = {\r\n\t\t\t\t\tid: {...state[index]}.id,\r\n\t\t\t\t\tname: action.task.name,\r\n\t\t\t\t\tstatus: action.task.status\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\treturn [...state];\r\n\t\t}\r\n\r\n\t\tcase types.TOGGLE_STATUS: {\r\n\r\n\t\t\tvar index = findIndexOfID(action.id);\r\n\r\n\t\t\tstate[index] = {\r\n\t\t\t\tid: {...state[index]}.id,\r\n\t\t\t\tname: {...state[index]}.name,\r\n\t\t\t\tstatus: !{...state[index]}.status\r\n\t\t\t}\r\n\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\treturn [...state];\r\n\t\t}\r\n\r\n\t\tcase types.DEL_TASK: {\r\n\r\n\t\t\tvar index = findIndexOfID(action.id);\r\n\r\n\t\t\tstate.splice(index, 1);\r\n\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\treturn [...state];\r\n\t\t}\r\n\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\t\r\n\treturn state;\r\n}\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = false;\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n\r\n\tswitch(action.type){\r\n\t\r\n\t\tcase types.BTN_ADD: {\r\n\t\t\tif(state === false){\r\n\t\t\t\tstate = true;\r\n\t\t\t}\r\n\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tcase types.PANEL_CLOSE: {\r\n\t\t\tstate = false;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tcase types.BTN_UPDATE: {\r\n\t\t\tstate = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tdefault: return state;\r\n\t}\r\n\t\r\n\treturn state;\r\n}\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n\tid: '',\r\n\tname: '',\r\n\tstatus: false\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n\r\n\tswitch(action.type){\r\n\r\n\t\tcase types.EDIT_TASK: {\r\n\t\t\r\n\t\t\tstate = action.task;\r\n\t\t\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\t\r\n\t\tcase types.RESET_FORM: {\r\n\t\t\r\n\t\t\tstate = {\r\n\t\t\t\tid: '',\r\n\t\t\t\tname: '',\r\n\t\t\t\tstatus: false\r\n\t\t\t};\r\n\t\t\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\t\r\n\treturn state;\r\n}\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n\tfilterName:'',\r\n\tfilterStatus: -1\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\r\n\t\tcase types.FILTER_TABLE: {\r\n\r\n\t\t\tstate.filterName = action.filter.filterName;\r\n\t\t\tstate.filterStatus = parseInt(action.filter.filterStatus);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tfilterName : action.filter.filterName,\r\n\t\t\t\tfilterStatus : parseInt(action.filter.filterStatus)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\treturn state;\r\n}\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = '';\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n\r\n\tswitch(action.type){\r\n\r\n\t\tcase types.SEARCH_BAR: {\r\n\r\n\t\t\tstate = action.regex.searchKeyWord;\r\n\r\n        \treturn action.regex.searchKeyWord;\r\n\t\t}\r\n\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\r\n\treturn state;\r\n}\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n\tby: 'name',\r\n\tvalue: 1\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n\r\n\tswitch(action.type){\r\n\t\r\n\t\tcase types.SORT_TABLE: {\r\n\t\r\n\t\t\tstate.by = action.sort.by;\r\n\t\t\tstate.value = parseInt(action.sort.value);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tby : action.sort.by,\r\n\t\t\t\tvalue : parseInt(action.sort.value)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\t\r\n\treturn state;\r\n}\r\n\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport DisplayForm from './DisplayForm';\r\nimport TaskEditing from './TaskEditing';\r\nimport FilterTable from './FilterTable';\r\nimport Search from './Search';\r\nimport SortTable from './SortTable';\r\n\r\nconst myReducer = combineReducers({\r\n\ttasks,\r\n\tDisplayForm,\r\n\tTaskEditing,\r\n\tFilterTable,\r\n\tSearch,\r\n\tSortTable\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\t\n// Create Store\nimport { createStore } from 'redux';\nimport myReducer from './reducers/index';\n\n// Provider\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n\t\tmyReducer,\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t);\n\n\nReactDOM.render(\n\t<Provider store = {store}>\n\t<App />\n\t</Provider>,\n\t document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}