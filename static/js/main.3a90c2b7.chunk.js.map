{"version":3,"sources":["components/FormAdd.js","components/BtnAddForm.js","components/SearchBar.js","components/BtnSort.js","components/DataItem.js","components/DataTable.js","App.js","serviceWorker.js","index.js"],"names":["FormAdd","props","onClickAddFormTitle","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","id","status","taskEditing","this","nextProps","className","onClick","type","Component","DataTable","onClickAddFormBtn","onSearchKeyWord","searchKeyWord","placeholder","required","onSortTable","sortName","sortValue","sort","by","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","DataItem","onChangeStatus","task","onDeleteItem","onUpdateItem","index","onFilter","filterName","filterStatus","elementTasks","tasks","map","key","App","formAddActive","item","generateID","push","findIndexOfID","localStorage","setItem","JSON","stringify","indexOfID","i","length","splice","taskEdit","filter","parseInt","data","getItem","parse","rdS","Math","floor","random","toString","substring","task1","task2","toLowerCase","indexOf","formAdd","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a90c2b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class FormAdd extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id: '',\r\n            name: '',\r\n            status: false\r\n        }\r\n    }\r\n\r\n    onClickAddFormTitle = () =>{\r\n        this.props.onClickAddFormTitle();\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    onClear = () => {\r\n        this.props.onClickAddFormTitle();\r\n    }\r\n\r\n    componentWillMount(){\r\n        var taskEditing = this.props.taskEditing;\r\n\r\n        if(taskEditing){\r\n            this.setState({\r\n                id: taskEditing.id,\r\n                name: taskEditing.name,\r\n                status: taskEditing.status\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.taskEditing){\r\n            this.setState({\r\n                id: nextProps.taskEditing.id,\r\n                name: nextProps.taskEditing.name,\r\n                status: nextProps.taskEditing.status\r\n            });\r\n        }else if(nextProps && !nextProps.taskEditing){\r\n            this.setState({\r\n                id: '',\r\n                name: '',\r\n                status: false\r\n            });  \r\n        }\r\n    }\r\n\r\n\trender() {\r\n\r\n        var taskEditing = this.state;\r\n\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"panel panel-warning\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\" onClick={ this.onClickAddFormTitle }> {taskEditing.id===''?'Add Working':'Update Working'}\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    <span className=\"label label-info ft-size\">Name</span>\r\n                                </label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control mt-5px\"\r\n                                    name=\"name\"\r\n                                    value={taskEditing.name}\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <br/>\r\n                                <label>\r\n                                    <span className=\"label label-info ft-size\">Status</span>\r\n                                </label>\r\n                                <select \r\n                                    className=\"form-control mt-5px\"\r\n                                    name=\"status\"\r\n                                    value={taskEditing.status}\r\n                                    onChange={this.onChange}\r\n                                >\r\n                                    <option value={true}>Active</option>\r\n                                    <option value={false}>DeActive</option>\r\n                                </select>\r\n                                <br/>\r\n                            </div>\r\n                        \r\n                            <button type=\"submit\" className=\"btn btn-success mr-2 up-si\">Save</button>\r\n                            <button type=\"button\" className=\"btn btn-warning up-si\" onClick={this.onClear}>Cancel</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class DataTable extends Component {\r\n\r\n\tonClickAddFormBtn = () =>{\r\n\t\tthis.props.onClickAddFormBtn();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <button type=\"button\" className=\"btn btn-primary btn-add\" onClick={this.onClickAddFormBtn}>ADD Working</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class DataTable extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchKeyWord: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (event) =>{\r\n\t\tvar target = event.target;\r\n\t\tvar name = target.name;\r\n\t\tvar value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]:value\r\n\t\t});\r\n\t}\r\n\r\n\tonSearchKeyWord = () => {\r\n\t\tthis.props.onSearchKeyWord(this.state.searchKeyWord);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8 pd-r-0\">\r\n                    <br/>\r\n                    <input \r\n                    \ttype=\"text\" \r\n                    \tclassName=\"form-control he-30\" \r\n                    \tplaceholder = \"Enter key word...\" \r\n                    \trequired=\"required\"\r\n                    \tname=\"searchKeyWord\"\r\n                    \tvalue={ this.state.searchKeyWord }\r\n                    \tonChange={ this.onChange }\r\n                    />\r\n                </div>\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4 pd-l-0\">\r\n                    <br/>\r\n                    <button \r\n                    \ttype=\"button\" \r\n                    \tclassName=\"btn btn-primary he-30\"\r\n                    \tonClick={ this.onSearchKeyWord }\r\n                    >Find</button>\r\n                </div>    \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class DataTable extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sort: {\r\n                by: '',\r\n                value: 0\r\n            }            \r\n        }\r\n    }\r\n\r\n    onSortTable = (sortName, sortValue) => { \r\n        this.setState({\r\n            sort: {\r\n                by: sortName,\r\n                value: sortValue\r\n            }\r\n        });\r\n\r\n        this.props.onSortTable(sortName, sortValue);\r\n    }\r\n\r\n\trender() {\r\n\r\n        var { sort } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br/>\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-secondary dropdown-toggle he-30\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Sort\r\n                    </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <a \r\n                            className={(sort.by===\"name\" && sort.value === 1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('name', 1)}}\r\n\r\n                        >Name A-Z</a>\r\n                        <a \r\n                            className={(sort.by===\"name\" && sort.value === -1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('name', -1)}}\r\n\r\n                        >Name Z-A</a>\r\n                        \r\n                        <hr/>\r\n                        <a \r\n                            className={(sort.by===\"status\" && sort.value === 1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('status', 1)}}\r\n\r\n                        >Status Active</a>\r\n                        <a \r\n                            className={(sort.by===\"status\" && sort.value === -1) ? \"dropdown-item sort-item-selected\" : \"dropdown-item\"} \r\n                            onClick={() => {this.onSortTable('status', -1)}}\r\n\r\n                        >Status DeActive</a>\r\n                    </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class DataItem extends Component {\r\n\r\n    onChangeStatus = () => {\r\n        this.props.onChangeStatus(this.props.task.id);\r\n    }\r\n\r\n    onDeleteItem = () => {\r\n        this.props.onDeleteItem(this.props.task.id);\r\n    }\r\n\r\n    onUpdateItem = () => {\r\n        this.props.onUpdateItem(this.props.task.id);\r\n    }\r\n\r\n\trender() {\r\n\r\n        var { task, index } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<tr>\r\n                <td className=\"al-ct\">{ index + 1 }</td>\r\n                <td className=\"ov-hd\">\r\n                    { task.name }\r\n                </td>\r\n                <td className=\"al-ct\">\r\n                    <span className={task.status===true?\"label label-success\":\"label label-danger\"} onClick={ this.onChangeStatus }>{ task.status===true?'Active':'DeActive' }</span>\r\n                </td>\r\n                <td className=\"al-ct\">\r\n                    <button \r\n                        className=\"align-item\" \r\n                        type=\"submit\" \r\n                        className=\"btn btn-warning mr-2\"\r\n                        onClick={ this.onUpdateItem }\r\n                    >\r\n                    Update</button>\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-danger\"\r\n                        onClick={ this.onDeleteItem }\r\n                    >Delete</button>\r\n                </td>\r\n            </tr>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport DataItem from './DataItem';\r\n\r\nexport default class DataTable extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfilterName: '', \r\n\t\t\tfilterStatus: '-1'\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (event) => {\r\n\t\tvar target = event.target;\r\n\t\tvar name = target.name;\r\n\t\tvar value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]:value\r\n\t\t});\r\n\r\n\t\tthis.props.onFilter(\r\n\t\t\tname === 'filterName' ? value : this.state.filterName,\r\n\t\t\tname === 'filterStatus' ? value : this.state.filterStatus);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tvar { tasks } =  this.props; // var tasks = this.props.tasks;\r\n\r\n\t\tvar elementTasks = tasks.map((task, index) => {\r\n\t\t\treturn <DataItem \r\n\t\t\t\t\t\tkey={ task.id } \r\n\t\t\t\t\t\tindex={ index } \r\n\t\t\t\t\t\ttask={ task }\r\n\t\t\t\t\t\tonChangeStatus={ this.props.onChangeStatus }\r\n\t\t\t\t\t\tonDeleteItem={ this.props.onDeleteItem }\r\n\t\t\t\t\t\tonUpdateItem={ this.props.onUpdateItem }\r\n\r\n\t\t\t\t\t/>\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br/>\r\n\t            <br/>\r\n\t            <table className=\"table table-hover\">\r\n\t                <thead className=\"align-header-table\">\r\n\t                    <tr>\r\n\t                        <th>STT</th>\r\n\t                        <th>Name</th>\r\n\t                        <th>Status</th>\r\n\t                        <th>Task</th>\r\n\t                    </tr>\r\n\t                </thead>\r\n\t                <tbody>\r\n\t                    <tr className=\"he-header\">\r\n\t                        <td></td>\r\n\t                        <td>\r\n\t                            <input \r\n\t                            \ttype=\"text\"\r\n\t                            \tclassName=\"form-control he-30\" \r\n\t                            \tplaceholder=\"Filter name\"\r\n\t                            \tname=\"filterName\"\r\n\t                            \tvalue={this.state.filterName}\r\n\t                            \tonChange={this.onChange}\r\n\t                             />\r\n\t                        </td>\r\n\t                        <td>\r\n\t                            <select\r\n\t                            \tid=\"input\" \r\n\t                            \tclassName=\"form-control\"\r\n\t                            \tname=\"filterStatus\"\r\n\t                            \tvalue={this.state.filterStatus}\r\n\t                            \tonChange={this.onChange}\r\n\t                            >\r\n\t                                <option value={-1}>All</option>\r\n\t                                <option value={0}>Avtive</option>\r\n\t                                <option value={1}>DeActive</option>\r\n\t                            </select>\r\n\t                        </td>\r\n\t                        <td>\r\n\t                        </td>\r\n\t                    </tr>\r\n\t                    { elementTasks }\r\n\t                </tbody>\r\n\t            </table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport FormAdd from './components/FormAdd';\nimport BtnAddForm from './components/BtnAddForm';\nimport SearchBar from './components/SearchBar';\nimport BtnSort from './components/BtnSort';\nimport DataTable from './components/DataTable';\n\n\nexport default class App extends Component {\n    \n    constructor(props){\n            super(props);\n            this.state = {\n                tasks : [], // id, name, status\n                formAddActive: false,\n                taskEditing: null,\n                filter: {\n                    name: '',\n                    status: -1\n                },\n                searchKeyWord: '',\n                sort: {\n                    by: '',\n                    value: 0\n                }\n            };\n    }\n\n    componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n            this.setState({\n                tasks: JSON.parse(localStorage.getItem('tasks'))\n            });\n        }\n    }\n\n    generateID(){\n        return this.rdS() + '-' + this.rdS() + this.rdS() + \"-\" + this.rdS() + \"-\" + this.rdS() + this.rdS() + this.rdS();\n    }\n\n    rdS(){ // generate random string\n        return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    onClickAddFormTitle = () =>{\n        this.setState({\n            formAddActive : false,\n        });\n    }\n    \n    onClickAddFormBtn = () =>{\n        if(this.state.formAddActive){\n            this.setState({\n                taskEditing: null\n            });\n        }else{\n            this.setState({\n                formAddActive : true,\n                taskEditing: null\n            });\n        }\n    }\n\n    onSubmit = (item) => {\n        var { tasks } = this.state;\n\n        if(item.status === \"true\"){\n            item.status = true;\n        }else{\n            item.status = false;\n        }\n\n        this.setState({\n            formAddActive: false\n        });\n\n        if(item && item.id===''){\n            item.id = this.generateID();\n            tasks.push(item);    \n        }else{\n            var indexOfID = this.findIndexOfID(item.id);\n            tasks[indexOfID] = item;\n        }\n        \n        this.setState({\n            tasks:tasks\n        })\n\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n\n    onChangeStatus = (id) => {\n        var { tasks } = this.state;\n        var indexOfID = this.findIndexOfID(id);\n\n        tasks[indexOfID].status = !tasks[indexOfID].status;\n\n        this.setState({\n            tasks: tasks\n        });\n\n        localStorage.setItem('tasks',JSON.stringify(tasks));    \n    }\n\n    findIndexOfID = (id) => {\n        var { tasks } = this.state;\n        for (let i=0; i<tasks.length; i++) {\n            if(tasks[i].id===id){\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    onDeleteItem = (id) => {\n        var { tasks } = this.state;\n        var indexOfID = this.findIndexOfID(id);\n        \n        if(indexOfID!==-1){\n            this.onClickAddFormTitle();\n            tasks.splice(indexOfID, 1);        \n\n            this.setState({\n                tasks: tasks\n            });\n\n            localStorage.setItem('tasks',JSON.stringify(tasks));    \n        }\n        \n    }\n\n    onUpdateItem = (id) => {\n        var { tasks } = this.state;\n        var indexOfID = this.findIndexOfID(id);\n        var taskEdit = tasks[indexOfID];\n\n        this.setState({\n            taskEditing: taskEdit,\n        });\n\n        if(this.state.formAddActive===false){\n            this.setState({\n                formAddActive: true\n            });   \n        }\n    }\n\n    onFilter = (filterName, filterStatus) => {\n        this.setState({\n            filter:{\n                name: filterName,\n                status: parseInt(filterStatus)\n            }\n        });\n    }\n\n    onSearchKeyWord = (data) => {\n        this.setState({\n            searchKeyWord: data\n        });\n    }\n\n    onSortTable = (sortName, sortValue) => {\n        this.setState({\n            sort: {\n                by: sortName,\n                value: parseInt(sortValue)\n            }\n        });\n    }\n\n    render() {\n\n        var { tasks, formAddActive, taskEditing, filter, searchKeyWord, sort } = this.state; \n\n        if(sort.by === 'name'){\n            tasks.sort((task1, task2) => {\n                if(task1.name > task2.name) {\n                    return sort.value;  \n                }else if(task1.name < task2.name) {\n                    return -sort.value;  \n                }else return 0;\n            });\n        }else{\n            tasks.sort((task1, task2) => {\n                if(task1.status > task2.status) {\n                    return -sort.value;  \n                }else if(task1.status < task2.status) {\n                    return sort.value;  \n                }else return 0;\n            });\n        }\n\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n\n        if(filter){\n            if(filter.name){\n                tasks = tasks.filter((task) => {\n                    return task.name.toLowerCase().indexOf(filter.name.toLowerCase()) !== -1;\n                })\n            }\n            tasks = tasks.filter((task) => {\n                if(filter.status !== -1){ \n                    return task.status === (filter.status === 1 ? false : true);   \n                }\n                return task;\n            })\n        }\n\n        if(searchKeyWord){\n            tasks = tasks.filter((task) => {\n                return task.name.toLowerCase().indexOf(searchKeyWord.toLowerCase()) !== -1;\n            })\n        }\n\n        var formAdd = this.state.formAddActive ? <FormAdd \n                                                        onClickAddFormTitle={ this.onClickAddFormTitle } \n                                                        onSubmit={this.onSubmit}\n                                                        taskEditing={taskEditing}\n                                                    />:<div></div>;\n\n        return (\n            <div>\n                <div className=\"container\">\n                    <h1 className=\"header-style\">Working Management</h1>\n                    <div className=\"row\">\n                        <div className={formAddActive ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\":\"\"}>\n                            { formAdd }\n                        </div>\n                        <div className={formAddActive ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                            <div className=\"row\">\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                    <BtnAddForm onClickAddFormBtn={this.onClickAddFormBtn}/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                                    <SearchBar onSearchKeyWord = { this.onSearchKeyWord }/>\n                                </div>\n                                \n                                <div className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2\">\n                                    <BtnSort onSortTable={ this.onSortTable }/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                    <DataTable \n                                        tasks={ tasks } \n                                        onChangeStatus={this.onChangeStatus}\n                                        onDeleteItem={this.onDeleteItem}\n                                        onUpdateItem={this.onUpdateItem}\n                                        onFilter={this.onFilter}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}